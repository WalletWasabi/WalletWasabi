<?xml version="1.0" encoding="UTF-8"?>
<UserControl xmlns="https://github.com/avaloniaui" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:WalletWasabi.Gui.Controls;assembly=WalletWasabi.Gui"             
             xmlns:converters="clr-namespace:WalletWasabi.Gui.Converters;assembly=WalletWasabi.Gui"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:behaviors="clr-namespace:WalletWasabi.Gui.Behaviors;assembly=WalletWasabi.Gui"
             xmlns:local="clr-namespace:WalletWasabi.Gui.Controls.WalletExplorer;assembly=WalletWasabi.Gui"
             x:Class="WalletWasabi.Gui.Controls.WalletExplorer.CoinJoinTabView">
  <UserControl.Resources>
    <converters:CoinJoinedVisibilityConverter x:Key="CoinJoinedVisibilityConverter" />
    <converters:MoneyStringConverter x:Key="MoneyStringConverter" />
    <converters:PhaseStringConverter x:Key="PhaseStringConverter" />
    <converters:PhaseColorConverter x:Key="PhaseColorConverter" />
    <converters:PrivacyLevelValueConverter x:Key="PrivacyLevelValueConverter" />
    <converters:LurkingWifeModeStringConverter x:Key="LurkingWifeModeStringConverter" />
    <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <converters:TimeSpanStringConverter x:Key="TimeSpanStringConverter" />
    <converters:TimeSpanVisibilityConverter x:Key="TimeSpanVisibilityConverter" />
  </UserControl.Resources>
  <Grid Margin="20">
    <Grid.RowDefinitions>
      <RowDefinition Height="8*" />
      <RowDefinition Height="3*" MinHeight="200" />
    </Grid.RowDefinitions>
    <Grid Classes="content" Grid.Row="0" Margin="0 0 0 10">
      <Grid.Styles>
        <Style Selector="ListBoxItem">
          <Setter Property="Padding" Value="0 0 5 0" />
        </Style>
      </Grid.Styles>
      <local:CoinListView DataContext="{Binding CoinsList}" />
    </Grid>
    <Grid Grid.Row="1">
      <Grid.RowDefinitions>
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="150" />
        <ColumnDefinition Width="*" MinWidth="460" />
      </Grid.ColumnDefinitions>
      <controls:GroupBox Grid.Row="0" Grid.Column="2" Title="Status" Padding="5" Margin="5 5 0 0">
        <ScrollViewer>
          <StackPanel Orientation="Vertical">
            <StackPanel Orientation="Horizontal" Spacing="4">
              <TextBlock Text="Minimum" />
              <TextBlock Foreground="YellowGreen" Text="{Binding RequiredBTC, Converter={StaticResource MoneyStringConverter}}" />
              <TextBlock Foreground="YellowGreen" Text="BTC" />
              <TextBlock Text="is required to be queued for CoinJoin." />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Spacing="4" IsVisible="{Binding AmountQueued, Converter={StaticResource CoinJoinedVisibilityConverter}}">
              <TextBlock Text="You have queued" />
              <TextBlock Foreground="YellowGreen" IsVisible="{Binding IsLurkingWifeMode, Converter={StaticResource InverseBooleanConverter}}" Text="{Binding AmountQueued, Converter={StaticResource MoneyStringConverter}}" />
              <TextBlock Foreground="YellowGreen" IsVisible="{Binding IsLurkingWifeMode}" Text="{Binding AmountQueued, ConverterParameter=8, Converter={StaticResource LurkingWifeModeStringConverter}, Mode=OneWay}" />
              <TextBlock Foreground="YellowGreen" Text="BTC" />
              <TextBlock Text="for CoinJoin." />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Spacing="4">
              <TextBlock Text="Coordinator Fee:" />
              <TextBlock Text="{Binding CoordinatorFeePercent}" />
              <TextBlock Text="% per anonymity set." />
            </StackPanel>
            <Grid ColumnDefinitions="210, *" RowDefinitions="50, 20, 20">
              <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Spacing="4" Margin="0 12">
                <Canvas Height="20" Width="200">
                  <Ellipse Width="20" Height="20" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=InputRegistration, Converter={StaticResource PhaseColorConverter}}" Canvas.Left="0" />
                  <Ellipse Width="20" Height="20" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=ConnectionConfirmation, Converter={StaticResource PhaseColorConverter}}" Canvas.Left="50" />
                  <Ellipse Width="20" Height="20" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=OutputRegistration, Converter={StaticResource PhaseColorConverter}}" Canvas.Left="100" />
                  <Ellipse Width="20" Height="20" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=Signing, Converter={StaticResource PhaseColorConverter}}" Canvas.Left="150" />
                  <Line StartPoint="20,10" EndPoint="50,10" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=InputRegistration, Converter={StaticResource PhaseColorConverter}}" />
                  <Line StartPoint="70,10" EndPoint="100,10" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=ConnectionConfirmation, Converter={StaticResource PhaseColorConverter}}" />
                  <Line StartPoint="120,10" EndPoint="150,10" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=OutputRegistration, Converter={StaticResource PhaseColorConverter}}" />
                </Canvas>
              </StackPanel>
              <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Spacing="4" Margin="0 12">
                <TextBlock VerticalAlignment="Center" Foreground="YellowGreen" Text="{Binding Phase, Converter={StaticResource PhaseStringConverter}}" />
              </StackPanel>
              <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Spacing="4" IsVisible="{Binding TimeLeftTillRoundTimeout, Converter={StaticResource TimeSpanVisibilityConverter}}">
                <TextBlock Text="Registration Ends In:" />
              </StackPanel>
              <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Spacing="4" IsVisible="{Binding TimeLeftTillRoundTimeout, Converter={StaticResource TimeSpanVisibilityConverter}}">
                <TextBlock Foreground="YellowGreen" Text="{Binding TimeLeftTillRoundTimeout, Converter={StaticResource TimeSpanStringConverter}}" />
              </StackPanel>
              <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal" Spacing="4">
                <TextBlock Text="Number of Registered Peers:" />
              </StackPanel>
              <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Spacing="4">
                <TextBlock Foreground="YellowGreen" Text="{Binding PeersRegistered}" />
                <TextBlock Text="/" />
                <TextBlock Text="{Binding PeersNeeded}" />
                <ProgressBar Minimum="0" Maximum="{Binding PeersNeeded}" Value="{Binding PeersRegistered}" />
              </StackPanel>
            </Grid>
          </StackPanel>
        </ScrollViewer>
      </controls:GroupBox>
      <controls:GroupBox Grid.Row="0" Grid.Column="0" Title="CoinJoin" Padding="5" Margin="0 5 5 0">
        <Grid Grid.Row="0" Grid.Column="0" Classes="content">
          <Grid.RowDefinitions>
            <RowDefinition Height="150" />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <StackPanel IsVisible="{Binding IsWatchOnly}" Grid.Column="0" Spacing="8">
            <StackPanel IsVisible="{Binding IsHardwareWallet}" VerticalAlignment="Center">
              <TextBlock Text="Hardware wallets cannot coinjoin :(" />
            </StackPanel>
          </StackPanel>
          <StackPanel IsVisible="{Binding !IsWatchOnly}" Grid.Column="0" Spacing="10">
            <controls:NoparaPasswordBox Password="{Binding Password}" Watermark="Password" UseFloatingWatermark="True" MinWidth="173" Margin="0 20 0 0">
              <i:Interaction.Behaviors>
                <behaviors:CommandOnEnterBehavior Command="{Binding EnqueueCommand}" />
              </i:Interaction.Behaviors>
            </controls:NoparaPasswordBox>
            <DockPanel Grid.Row="0" Grid.Column="1" LastChildFill="True" IsEnabled="{Binding !IsEnqueueBusy}">
              <Button Command="{Binding EnqueueCommand}" DockPanel.Dock="Right">
                <StackPanel Orientation="Horizontal">
                  <controls:Spinner Height="20" Width="20" IsVisible="{Binding IsEnqueueBusy}" Margin="0 0 8 0" />
                  <TextBlock Text="{Binding EnqueueButtonText}" />
                </StackPanel>
              </Button>
            </DockPanel>
            <DockPanel LastChildFill="True" IsEnabled="{Binding !IsDequeueBusy}">
              <Button Command="{Binding DequeueCommand}" DockPanel.Dock="Right">
                <StackPanel Orientation="Horizontal">
                  <controls:Spinner Height="20" Width="20" IsVisible="{Binding IsDequeueBusy}" Margin="0 0 8 0" />
                  <TextBlock Text="{Binding DequeueButtonText}" />
                </StackPanel>
              </Button>
            </DockPanel>
            <TextBlock Text="{Binding WarningMessage}" Classes="warningMessage" />
          </StackPanel>
        </Grid>
      </controls:GroupBox>
      <controls:GroupBox Grid.Column="1" Title="Target" Padding="5" Margin="5 0">
        <Button Command="{Binding TargetButtonCommand}">
          <Grid Background="Transparent" DataContext="{Binding CoinJoinUntilAnonymitySet, Converter={StaticResource PrivacyLevelValueConverter}}">
            <Grid.RowDefinitions>
              <RowDefinition Height="2*"></RowDefinition>
              <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <DrawingPresenter Grid.Row="0" Drawing="{Binding Icon}" VerticalAlignment="Top" Height="100" Width="75" />
            <TextBlock Margin="0 5 0 0" Grid.Row="1" Text="{Binding ToolTip}" TextAlignment="Center" TextWrapping="Wrap" />
          </Grid>
        </Button>
      </controls:GroupBox>
    </Grid>
  </Grid>
</UserControl>
