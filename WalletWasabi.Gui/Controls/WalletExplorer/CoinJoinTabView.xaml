<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:controls="clr-namespace:WalletWasabi.Gui.Controls;assembly=WalletWasabi.Gui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:WalletWasabi.Gui.Converters;assembly=WalletWasabi.Gui"
             xmlns:local="clr-namespace:WalletWasabi.Gui.Controls.WalletExplorer;assembly=WalletWasabi.Gui">
  <UserControl.Resources>
    <converters:CoinJoinedVisibilityConverter x:Key="CoinJoinedVisibilityConverter" />
    <converters:MoneyStringConverter x:Key="MoneyStringConverter" />
    <converters:PhaseStringConverter x:Key="PhaseStringConverter" />
    <converters:PhaseColorConverter x:Key="PhaseColorConverter" />
  </UserControl.Resources>
  <Grid RowDefinitions="8*,3*">
    <controls:GroupBox Title="Coins" TextBlock.FontSize="16" Padding="10" Margin="10 5 10 5">
      <Grid Classes="content">
        <DockPanel LastChildFill="True">
          <StackPanel Spacing="10" Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="0 10 0 0" HorizontalAlignment="Right">
            <TextBlock Text="{Binding WarningMessage}" Classes="warningMessage" />
            <TextBox Text="{Binding Password}" PasswordChar="*" Watermark="Password" UseFloatingWatermark="True" MinWidth="173" />
            <DockPanel LastChildFill="True" VerticalAlignment="Top" IsEnabled="{Binding !IsEnqueueBusy}">
              <Button Command="{Binding EnqueueCommand}" DockPanel.Dock="Right">
                <StackPanel Orientation="Horizontal">
                  <controls:Spinner Height="20" Width="20" IsVisible="{Binding IsEnqueueBusy}" Margin="0 0 8 0" />
                  <TextBlock Text="{Binding EnqueueButtonText}" />
                </StackPanel>
              </Button>
              <Grid />
            </DockPanel>
            <DockPanel LastChildFill="True" VerticalAlignment="Top" IsEnabled="{Binding !IsDequeueBusy}">
              <Button Command="{Binding DequeueCommand}" DockPanel.Dock="Right">
                <StackPanel Orientation="Horizontal">
                  <controls:Spinner Height="20" Width="20" IsVisible="{Binding IsDequeueBusy}" Margin="0 0 8 0" />
                  <TextBlock Text="{Binding DequeueButtonText}" />
                </StackPanel>
              </Button>
              <Grid />
            </DockPanel>
          </StackPanel>
          <local:CoinListView DataContext="{Binding CoinsList}" />
        </DockPanel>
      </Grid>
    </controls:GroupBox>

    <controls:GroupBox Title="Status" TextBlock.FontSize="16" Padding="10" Margin="10 5 10 5" Grid.Row="1">
      <Grid Classes="content">
        <ScrollViewer>
          <StackPanel Orientation="Vertical">
            <StackPanel Orientation="Horizontal" Spacing="4">
              <TextBlock Text="Minimum" />
              <TextBlock Foreground="YellowGreen" Text="{Binding RequiredBTC, Converter={StaticResource MoneyStringConverter}}" />
              <TextBlock Foreground="YellowGreen" Text="BTC" />
              <TextBlock Text="is required to be queued for CoinJoin." />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Spacing="4" IsVisible="{Binding AmountQueued, Converter={StaticResource CoinJoinedVisibilityConverter}}">
              <TextBlock Text="You have queued" />
              <TextBlock Foreground="YellowGreen" Text="{Binding AmountQueued, Converter={StaticResource MoneyStringConverter}}" />
              <TextBlock Foreground="YellowGreen" Text="BTC" />
              <TextBlock Text="for CoinJoin." />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Spacing="4">
              <TextBlock Text="Coordinator Fee:" />
              <TextBlock Text="{Binding CoordinatorFeePercent}" />
              <TextBlock Text="% per anonymity set." />
            </StackPanel>

            <Grid ColumnDefinitions="210, *" RowDefinitions="50, 20, 20">

              <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Spacing="4" Margin="0 12">
                <Canvas Height="20" Width="200">
                  <Ellipse Width="20" Height="20" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=InputRegistration, Converter={StaticResource PhaseColorConverter}}" Canvas.Left="0" />
                  <Ellipse Width="20" Height="20" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=ConnectionConfirmation, Converter={StaticResource PhaseColorConverter}}" Canvas.Left="50" />
                  <Ellipse Width="20" Height="20" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=OutputRegistration, Converter={StaticResource PhaseColorConverter}}" Canvas.Left="100" />
                  <Ellipse Width="20" Height="20" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=Signing, Converter={StaticResource PhaseColorConverter}}" Canvas.Left="150" />
                  <Line StartPoint="20,10" EndPoint="50,10" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=InputRegistration, Converter={StaticResource PhaseColorConverter}}" />
                  <Line StartPoint="70,10" EndPoint="100,10" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=ConnectionConfirmation, Converter={StaticResource PhaseColorConverter}}" />
                  <Line StartPoint="120,10" EndPoint="150,10" StrokeThickness="4" Stroke="{Binding Phase, ConverterParameter=OutputRegistration, Converter={StaticResource PhaseColorConverter}}" />
                </Canvas>
              </StackPanel>
              <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Spacing="4" Margin="0 12">
                <TextBlock VerticalAlignment="Center" Foreground="YellowGreen" Text="{Binding Phase, Converter={StaticResource PhaseStringConverter}}" />
              </StackPanel>

              <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Spacing="4">
                <TextBlock Text="Number of Registered Peers:" />
              </StackPanel>

              <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Spacing="4">
                <TextBlock Foreground="YellowGreen" Text="{Binding PeersRegistered}" />
                <TextBlock Text="/" />
                <TextBlock Text="{Binding PeersNeeded}" />
                <ProgressBar Minimum="0" Maximum="{Binding PeersNeeded}" Value="{Binding PeersRegistered}" />
              </StackPanel>

              <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal" Spacing="4">
                <TextBlock Text="Number of Successful Rounds:" />
              </StackPanel>

              <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Spacing="4">
                <TextBlock Foreground="YellowGreen" Text="{Binding SuccessfulRoundCount}" />
              </StackPanel>
            </Grid>
          </StackPanel>
        </ScrollViewer>
      </Grid>
    </controls:GroupBox>
  </Grid>
</UserControl>
