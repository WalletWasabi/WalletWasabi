trigger:
  batch: true

variables:
  testConfiguration: 'Debug'

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET'
    inputs:
      version: 6.0.x
  - task: DotNetCoreCLI@2
    displayName: 'Restore & verify lock files'
    inputs:
      command: 'restore'
      restoreArguments: '--locked-mode /property:Configuration=Release --lock-file-path release.packages.lock.json'
      feedsToUse: 'config'
      nugetConfigPath: 'NuGet.Config'
  - task: DotNetCoreCLI@2
    displayName: 'Build Debug'
    inputs:
      command: build
      arguments: --configuration Debug
  - task: DotNetCoreCLI@2
    displayName: 'Build Release'
    inputs:
      command: build
      arguments: --configuration Release /p:RestoreLockedMode=true /p:NuGetLockFilePath="release.packages.lock.json"
  - task: CmdLine@2
    inputs:
      # Remove PathMap properties which ensure deterministic builds, since this
      # interferes with the coverage analysis.
      script: 'sed -i "/PathMap/d" $(System.DefaultWorkingDirectory)/*/*.csproj'
  - task: DotNetCoreCLI@2
    displayName: 'Test Debug'
    inputs:
      command: test
      projects: 'WalletWasabi.Tests/WalletWasabi.Tests.csproj'
      arguments: --configuration $(testConfiguration) --filter "UnitTests" --logger "console;verbosity=detailed" --collect:"XPlat Code Coverage"
      publishTestResults: true
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage report'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
      pathToSources: '$(System.DefaultWorkingDirectory)/'
      failIfCoverageEmpty: true
