<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="using:WalletWasabi.Fluent.Controls"
             xmlns:navbar="using:WalletWasabi.Fluent.Views.NavBar"
             xmlns:i="using:Avalonia.Xaml.Interactivity"
             xmlns:behaviors="using:WalletWasabi.Fluent.Behaviors"
             xmlns:vm="using:WalletWasabi.Fluent.ViewModels"
             xmlns:statusBar="clr-namespace:WalletWasabi.Fluent.Views.StatusBar"
             mc:Ignorable="d" d:DesignWidth="536" d:DesignHeight="459"
             x:DataType="vm:MainViewModel"
             x:CompileBindings="True"
             x:Class="WalletWasabi.Fluent.Views.MainView">
  <Panel>
    <SplitView
      IsEnabled="{Binding IsMainContentEnabled}"
      CompactPaneLength="{Binding NavBar.CurrentCompactPaneLength}"
      OpenPaneLength="{Binding NavBar.CurrentOpenPaneLength}"
      IsPaneOpen="{Binding NavBar.IsOpen, Mode=TwoWay}">
      <i:Interaction.Behaviors>
        <behaviors:SplitViewAutoBehavior ToggleAction="{Binding NavBar.ToggleAction, Mode=OneWayToSource}"
                                         CollapseOnClickAction="{Binding NavBar.CollapseOnClickAction, Mode=OneWayToSource}"
                                         CollapseThreshold="{StaticResource SplitViewCollapseThreshold}" />
      </i:Interaction.Behaviors>

      <SplitView.Pane>
        <Panel>
          <ExperimentalAcrylicBorder DockPanel.Dock="Left" IsHitTestVisible="False">
            <ExperimentalAcrylicBorder.Material>
              <ExperimentalAcrylicMaterial BackgroundSource="Digger"
                                           TintColor="{DynamicResource NavBarTintColor}"
                                           TintOpacity="1"
                                           FallbackColor="{DynamicResource AcrylicFallbackColor}"
                                           MaterialOpacity="0.8" />
            </ExperimentalAcrylicBorder.Material>
          </ExperimentalAcrylicBorder>
          <navbar:NavBar DataContext="{Binding NavBar}" />
        </Panel>
      </SplitView.Pane>
      <Panel>
        <DockPanel>
          <Panel Background="{DynamicResource RegionColor}" DockPanel.Dock="Bottom" VerticalAlignment="Bottom"
                 Height="32">
            <statusBar:StatusBar DataContext="{Binding StatusBar}" />
          </Panel>
          <Panel>
            <Panel.Styles>
              <Style Selector="ContentControl c|ContentArea /template/ Panel#PART_ButtonArea">
                <Setter Property="IsVisible" Value="False" />
              </Style>

              <Style Selector="c|ContentArea /template/ StackPanel#PART_Header">
                <Setter Property="Margin" Value="31 36 31 0" />
              </Style>
            </Panel.Styles>
            <Border Background="{DynamicResource RegionColor}" IsHitTestVisible="False" />
            <ContentControl ClipToBounds="False" Content="{Binding MainScreen.CurrentPage}" />
          </Panel>
        </DockPanel>
      </Panel>
    </SplitView>
    <ExperimentalAcrylicBorder DockPanel.Dock="Left" IsHitTestVisible="False" IsVisible="{Binding IsOobeBackgroundVisible}">
      <ExperimentalAcrylicBorder.Material>
        <ExperimentalAcrylicMaterial BackgroundSource="Digger"
                                     TintColor="{DynamicResource SystemAltHighColor}"
                                     TintOpacity="0.8"
                                     FallbackColor="{DynamicResource AcrylicFallbackColor}"
                                     MaterialOpacity="0.2" />
      </ExperimentalAcrylicBorder.Material>
      <Viewbox Stretch="Uniform" ClipToBounds="False" >
        <ContentControl Template="{StaticResource WelcomeBg}" ClipToBounds="False" />
      </Viewbox>

    </ExperimentalAcrylicBorder>
    <c:Dialog x:CompileBindings="False"
              DataContext="{Binding FullScreen}"
              IsDialogOpen="{Binding IsDialogOpen, Mode=TwoWay}"
              IsActive="{Binding CurrentPage.IsActive}"
              IsBusy="{Binding CurrentPage.IsBusy, FallbackValue=False}"
              IsBackEnabled="{Binding CurrentPage.EnableBack, FallbackValue=False}"
              IsCancelEnabled="{Binding CurrentPage.EnableCancel, FallbackValue=False}"
              EnableCancelOnPressed="{Binding CurrentPage.EnableCancelOnPressed, FallbackValue=True}"
              EnableCancelOnEscape="{Binding CurrentPage.EnableCancelOnEscape, FallbackValue=True}"
              IsEnabled="{Binding $parent.DataContext.IsFullScreenEnabled}"
              HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <c:Dialog.Styles>
        <Style Selector="c|Dialog /template/ Panel#PART_Overlay">
          <Setter Property="Background" Value="{DynamicResource RegionColor}" />
        </Style>
        <Style Selector="c|Dialog /template/ Border#PART_Border">
          <Setter Property="Margin" Value="0" />
          <Setter Property="CornerRadius" Value="0" />
          <Setter Property="BoxShadow" Value="" />
        </Style>
      </c:Dialog.Styles>
      <ContentControl Content="{Binding CurrentPage}" />
    </c:Dialog>
    <c:Dialog x:CompileBindings="False"
              DataContext="{Binding DialogScreen}"
              IsDialogOpen="{Binding IsDialogOpen, Mode=TwoWay}"
              IsActive="{Binding CurrentPage.IsActive}"
              IsBusy="{Binding CurrentPage.IsBusy, FallbackValue=False}"
              IsBackEnabled="{Binding CurrentPage.EnableBack, FallbackValue=False}"
              IsCancelEnabled="{Binding CurrentPage.EnableCancel, FallbackValue=False}"
              EnableCancelOnPressed="{Binding CurrentPage.EnableCancelOnPressed, FallbackValue=True}"
              EnableCancelOnEscape="{Binding CurrentPage.EnableCancelOnEscape, FallbackValue=True}"
              IsEnabled="{Binding $parent.DataContext.IsDialogScreenEnabled}"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
              MaxContentWidth="800" MaxContentHeight="700">
      <ContentControl Content="{Binding CurrentPage}" />
    </c:Dialog>
    <c:Dialog x:CompileBindings="False"
              DataContext="{Binding CompactDialogScreen}"
              IsDialogOpen="{Binding IsDialogOpen, Mode=TwoWay}"
              IsActive="{Binding CurrentPage.IsActive}"
              IsBusy="{Binding CurrentPage.IsBusy, FallbackValue=False}"
              IsBackEnabled="{Binding CurrentPage.EnableBack, FallbackValue=False}"
              IsCancelEnabled="{Binding CurrentPage.EnableCancel, FallbackValue=False}"
              EnableCancelOnPressed="{Binding CurrentPage.EnableCancelOnPressed, FallbackValue=True}"
              EnableCancelOnEscape="{Binding CurrentPage.EnableCancelOnEscape, FallbackValue=True}"
              IsEnabled="{Binding $parent.DataContext.IsDialogScreenEnabled}"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <c:Dialog.Styles>
        <Style Selector="c|Dialog[FullScreenEnabled=True]">
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>
      </c:Dialog.Styles>
      <ContentControl Content="{Binding CurrentPage}" />
    </c:Dialog>
  </Panel>
</UserControl>
