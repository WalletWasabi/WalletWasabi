<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="using:WalletWasabi.Fluent.Controls"
             xmlns:navbar="using:WalletWasabi.Fluent.Views.NavBar"
             xmlns:ext="using:WalletWasabi.Fluent.Helpers"
             xmlns:vm="using:WalletWasabi.Fluent.ViewModels"
             xmlns:statusBar="clr-namespace:WalletWasabi.Fluent.Views.StatusBar"
             xmlns:wallets="clr-namespace:WalletWasabi.Fluent.Views.Wallets"
             xmlns:spectrum="clr-namespace:WalletWasabi.Fluent.Controls.Spectrum"
             xmlns:searchBar="clr-namespace:WalletWasabi.Fluent.Views.SearchBar"
             xmlns:converters="clr-namespace:WalletWasabi.Fluent.Converters"
             mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="459"
             x:DataType="vm:MainViewModel"
             x:CompileBindings="True"
             x:Class="WalletWasabi.Fluent.Views.MainView">
  <Panel>
    <Panel>
      <Panel IsEnabled="{Binding IsMainContentEnabled}">
        <ExperimentalAcrylicBorder IsHitTestVisible="False">
          <ExperimentalAcrylicBorder.Material>
            <ExperimentalAcrylicMaterial BackgroundSource="Digger"
                                         TintColor="{DynamicResource AcrylicTrimBackground}"
                                         TintOpacity="1"
                                         FallbackColor="{DynamicResource AcrylicTrimBackground}"
                                         MaterialOpacity="0.9" />
          </ExperimentalAcrylicBorder.Material>
        </ExperimentalAcrylicBorder>
        <Panel IsHitTestVisible="False" Background="{DynamicResource AcrylicTrimOverlayBackground}"/>

        <Grid ColumnDefinitions="68, *, 150" RowDefinitions="48, *">

          <Panel Grid.Row="0" Grid.Column="{ext:Platform 0, Osx=1}" Grid.ColumnSpan="{ext:Platform 2, Osx=1}" TextBlock.Foreground="{DynamicResource NavBarItemForegroundBrush}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20 0 0 0">
              <Viewbox Height="18" Width="18" IsHitTestVisible="False">
                <Image Source="{DynamicResource wasabi_logo_dynamic}" />
              </Viewbox>
              <TextBlock Foreground="{DynamicResource AcrylicTrimForeground}" Classes="h8" VerticalAlignment="Center" Text="Wasabi Wallet" Margin="20 0 0 0" IsHitTestVisible="False" />
              <TextBlock Foreground="{DynamicResource AcrylicTrimForeground}" Classes="h8" VerticalAlignment="Center" Opacity="0.6" Text="TESTNET PREVIEW" IsHitTestVisible="False" Margin="5 0 0 0" />
            </StackPanel>
          </Panel>

          <statusBar:StatusBar Grid.Column="{ext:Platform 1, Osx=2}" Margin="0 0 5 0" Foreground="{DynamicResource AcrylicTrimForeground}" DataContext="{Binding StatusBar}" HorizontalAlignment="Right" VerticalAlignment="Center" />

          <navbar:NavBar Grid.Row="1" Grid.Column="0" DataContext="{Binding NavBar}" />

          <Border Grid.Row="1" Grid.Column="1" BorderBrush="{DynamicResource TileBorderColor}" BorderThickness="1 1 0 0" Grid.ColumnSpan="2" CornerRadius="10 0 0 0" ClipToBounds="True">
            <Panel>
              <Border CornerRadius="10 0 0 0" Background="{DynamicResource RegionColor}" ClipToBounds="True" IsHitTestVisible="False" />
              <Panel VerticalAlignment="Bottom"
                     Height="100">
                <spectrum:SpectrumControl Foreground="{DynamicResource SystemAccentColor}" Opacity="0.6" IsActive="{Binding IsCoinJoinActive}"
                                          IsDockEffectVisible="{Binding MusicControls.IsActive}" />
              </Panel>
              <DockPanel>
                <DockPanel.Styles>
                  <Style Selector="ContentControl c|ContentArea /template/ Panel#PART_ButtonArea">
                    <Setter Property="IsVisible" Value="False" />
                  </Style>

                  <Style Selector="c|ContentArea /template/ StackPanel#PART_Header">
                    <Setter Property="Margin" Value="31 26 31 0" />
                  </Style>
                </DockPanel.Styles>
                <wallets:MusicControlsView DockPanel.Dock="Bottom" DataContext="{Binding MusicControls}"
                                           HorizontalAlignment="Center" Height="66" />
                <ContentControl ClipToBounds="False" Content="{Binding MainScreen.CurrentPage}" />
              </DockPanel>
              <Border CornerRadius="10 0 0 0" BoxShadow="inset 0 0 5 0 #000000" ClipToBounds="True" IsHitTestVisible="False" Margin="0 0 -5 -5" />
            </Panel>
          </Border>

          <searchBar:SearchBar DataContext="{Binding SearchBar}" Width="400" VerticalAlignment="Stretch" x:CompileBindings="False"
                               Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" IsHitTestVisible="{Binding $parent.DataContext.IsMainContentEnabled, FallbackValue=True}" />

        </Grid>
      </Panel>
      <ExperimentalAcrylicBorder DockPanel.Dock="Left" IsHitTestVisible="False"
                                 IsVisible="{Binding IsOobeBackgroundVisible, FallbackValue=False}">
        <ExperimentalAcrylicBorder.Material>
          <ExperimentalAcrylicMaterial BackgroundSource="Digger"
                                       TintColor="{DynamicResource SystemAltHighColor}"
                                       TintOpacity="0.8"
                                       FallbackColor="{DynamicResource AcrylicFallbackColor}"
                                       MaterialOpacity="0.2" />
        </ExperimentalAcrylicBorder.Material>
        <Viewbox Stretch="Uniform" ClipToBounds="False">
          <ContentControl Template="{StaticResource WelcomeBg}" ClipToBounds="False" />
        </Viewbox>
      </ExperimentalAcrylicBorder>
      <c:AdornerCanvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{Binding $parent[Window].OffScreenMargin, Converter={x:Static converters:ThicknessConverters.Negate}}" />
      <c:Dialog x:CompileBindings="False"
                DataContext="{Binding FullScreen}"
                IsDialogOpen="{Binding IsDialogOpen, Mode=TwoWay}"
                IsActive="{Binding CurrentPage.IsActive}"
                IsBusy="{Binding CurrentPage.IsBusy, FallbackValue=False}"
                IsBackEnabled="{Binding CurrentPage.EnableBack, FallbackValue=False}"
                IsCancelEnabled="{Binding CurrentPage.EnableCancel, FallbackValue=False}"
                EnableCancelOnPressed="{Binding CurrentPage.EnableCancelOnPressed, FallbackValue=True}"
                EnableCancelOnEscape="{Binding CurrentPage.EnableCancelOnEscape, FallbackValue=True}"
                IsEnabled="{Binding $parent.DataContext.IsFullScreenEnabled}"
                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                IncreasedWidthThreshold="740" IncreasedHeightThreshold="580" FullScreenHeightThreshold="580">
        <c:Dialog.Styles>
          <Style Selector="c|Dialog /template/ Panel#PART_Overlay">
            <Setter Property="Background" Value="{DynamicResource RegionColor}" />
          </Style>
          <Style Selector="c|Dialog /template/ Border#PART_Border">
            <Setter Property="Margin" Value="0" />
            <Setter Property="CornerRadius" Value="0" />
            <Setter Property="BoxShadow" Value="" />
          </Style>
        </c:Dialog.Styles>
        <ContentControl Content="{Binding CurrentPage}" />
      </c:Dialog>
      <c:Dialog x:CompileBindings="False"
                DataContext="{Binding DialogScreen}"
                IsDialogOpen="{Binding IsDialogOpen, Mode=TwoWay}"
                IsActive="{Binding CurrentPage.IsActive}"
                IsBusy="{Binding CurrentPage.IsBusy, FallbackValue=False}"
                IsBackEnabled="{Binding CurrentPage.EnableBack, FallbackValue=False}"
                IsCancelEnabled="{Binding CurrentPage.EnableCancel, FallbackValue=False}"
                EnableCancelOnPressed="{Binding CurrentPage.EnableCancelOnPressed, FallbackValue=True}"
                EnableCancelOnEscape="{Binding CurrentPage.EnableCancelOnEscape, FallbackValue=True}"
                IsEnabled="{Binding $parent.DataContext.IsDialogScreenEnabled}"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                MaxContentWidth="800" MaxContentHeight="700"
                IncreasedWidthThreshold="740" IncreasedHeightThreshold="580" FullScreenHeightThreshold="580">
        <ContentControl Content="{Binding CurrentPage}" />
      </c:Dialog>
      <c:Dialog x:CompileBindings="False"
                DataContext="{Binding CompactDialogScreen}"
                IsDialogOpen="{Binding IsDialogOpen, Mode=TwoWay}"
                IsActive="{Binding CurrentPage.IsActive}"
                IsBusy="{Binding CurrentPage.IsBusy, FallbackValue=False}"
                IsBackEnabled="{Binding CurrentPage.EnableBack, FallbackValue=False}"
                IsCancelEnabled="{Binding CurrentPage.EnableCancel, FallbackValue=False}"
                EnableCancelOnPressed="{Binding CurrentPage.EnableCancelOnPressed, FallbackValue=True}"
                EnableCancelOnEscape="{Binding CurrentPage.EnableCancelOnEscape, FallbackValue=True}"
                IsEnabled="{Binding $parent.DataContext.IsDialogScreenEnabled}"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <ContentControl Content="{Binding CurrentPage}" />
      </c:Dialog>
    </Panel>
  </Panel>
</UserControl>
