<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:create="using:WalletWasabi.Fluent.ViewModels.AddWallet.Create"
             mc:Ignorable="d" d:DesignWidth="428" d:DesignHeight="371"
             x:CompileBindings="True"
             x:DataType="create:MultiShareOptionsViewModel"
             x:Class="WalletWasabi.Fluent.Views.AddWallet.Create.MultiShareOptionsView">

  <UserControl.Resources>

    <MenuFlyout x:Key="IntTextBoxDefaultTextBoxContextFlyout">
      <MenuItem x:Name="TextBoxContextFlyoutCutItem"
                Header="Cut"
                Command="{Binding $parent[TextBox].Cut}"
                IsEnabled="{Binding $parent[TextBox].CanCut}"
                InputGesture="{x:Static TextBox.CutGesture}" />
      <MenuItem x:Name="TextBoxContextFlyoutCopyItem"
                Header="Copy"
                Command="{Binding $parent[TextBox].Copy}"
                IsEnabled="{Binding $parent[TextBox].CanCopy}"
                InputGesture="{x:Static TextBox.CopyGesture}"/>
      <MenuItem x:Name="TextBoxContextFlyoutPasteItem"
                Header="Paste"
                Command="{Binding $parent[IntTextBox].ModifiedPasteAsync}"
                IsEnabled="{Binding $parent[TextBox].CanPaste}"
                InputGesture="{x:Static TextBox.PasteGesture}"/>
    </MenuFlyout>
    <MenuFlyout x:Key="IntTextBoxHorizontalTextBoxContextFlyout"
                FlyoutPresenterTheme="{StaticResource HorizontalMenuFlyoutPresenter}"
                ItemContainerTheme="{StaticResource HorizontalMenuItem}">
      <MenuItem x:Name="HorizontalTextBoxContextFlyoutCutItem"
                Header="Cut"
                Command="{Binding $parent[TextBox].Cut}"
                IsEnabled="{Binding $parent[TextBox].CanCut}"
                IsVisible="{Binding $parent[TextBox].CanCut}" />
      <MenuItem x:Name="HorizontalTextBoxContextFlyoutCopyItem"
                Header="Copy"
                Command="{Binding $parent[TextBox].Copy}"
                IsEnabled="{Binding $parent[TextBox].CanCopy}"
                IsVisible="{Binding $parent[TextBox].CanCopy}" />
      <MenuItem x:Name="HorizontalTextBoxContextFlyoutPasteItem"
                Header="Paste"
                Command="{Binding $parent[IntTextBox].ModifiedPasteAsync}"
                IsEnabled="{Binding $parent[TextBox].CanPaste}" />
    </MenuFlyout>

    <ControlTheme x:Key="MultiShareNumericUpDown" TargetType="NumericUpDown"  BasedOn="{StaticResource {x:Type NumericUpDown}}">
      <Setter Property="Template">
        <ControlTemplate>
          <DataValidationErrors>
            <ButtonSpinner Name="PART_Spinner"
                           Background="{TemplateBinding Background}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           BorderBrush="{TemplateBinding BorderBrush}"
                           CornerRadius="{TemplateBinding CornerRadius}"
                           IsTabStop="False"
                           Padding="0"
                           MinWidth="0"
                           HorizontalContentAlignment="Stretch"
                           VerticalContentAlignment="Stretch"
                           AllowSpin="{TemplateBinding AllowSpin}"
                           ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}"
                           ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}">
              <IntTextBox Name="PART_TextBox"
                          Minimum="{TemplateBinding Minimum}"
                          Maximum="{TemplateBinding Maximum}"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          Margin="-1"
                          Padding="{TemplateBinding Padding}"
                          MinWidth="0"
                          Foreground="{TemplateBinding Foreground}"
                          Watermark="{TemplateBinding Watermark}"
                          IsReadOnly="{TemplateBinding IsReadOnly}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Text="{TemplateBinding Text}"
                          TextAlignment="{TemplateBinding TextAlignment}"
                          AcceptsReturn="False"
                          TextWrapping="NoWrap"
                          InnerLeftContent="{Binding InnerLeftContent, RelativeSource={RelativeSource TemplatedParent}}"
                          InnerRightContent="{Binding InnerRightContent, RelativeSource={RelativeSource TemplatedParent}}"
                          ContextFlyout="{OnFormFactor Desktop={StaticResource IntTextBoxDefaultTextBoxContextFlyout}, Mobile={StaticResource IntTextBoxHorizontalTextBoxContextFlyout}}" />
            </ButtonSpinner>
          </DataValidationErrors>
        </ControlTemplate>
      </Setter>
    </ControlTheme>
  </UserControl.Resources>

  <ContentArea Title="{Binding Title}"
               Caption="Set number of shares and threshold."
               CancelContent="Cancel"
               EnableCancel="{Binding EnableCancel}"
               EnableBack="{Binding EnableBack}"
               EnableNext="True" NextContent="Continue" FocusNext="True"
               ScrollViewer.HorizontalScrollBarVisibility="Auto">
    <StackPanel HorizontalAlignment="Center"
                VerticalAlignment="Center">
      <!-- Number of shares in which the seed will be split. -->
      <Label Content="Shares:"
             Target="SharesNumericUpDown" />
      <DockPanel VerticalAlignment="Center">
        <InfoMessage DockPanel.Dock="Right"
                     VerticalAlignment="Center"
                     Margin="14,0,0,0"
                     ToolTip.Tip="This sets the total number of pieces (or 'shares') your secret will be split into. Each share can be given to a different trusted party." />
        <NumericUpDown Value="{Binding Shares}"
                       Theme="{DynamicResource MultiShareNumericUpDown}"
                       Minimum="1"
                       Maximum="16"
                       Increment="1"
                       FormatString="G2"
                       ClipValueToMinMax="True"
                       ParsingNumberStyle="None"
                       MinWidth="420"
                       Name="SharesNumericUpDown" />
      </DockPanel>
      <!-- Number of shares necessary to recombine the seed. -->
      <Label Content="Threshold:"
             Target="ThresholdNumericUpDown" />
      <DockPanel VerticalAlignment="Center">
        <InfoMessage DockPanel.Dock="Right"
                     VerticalAlignment="Center"
                     Margin="14,0,0,0"
                     ToolTip.Tip="This sets the minimum number of shares required to reconstruct the secret. For example, if you set 3 shares and a threshold of 2, any 2 out of the 3 shares will be enough to recover the original secret." />
        <NumericUpDown Value="{Binding Threshold}"
                       Theme="{DynamicResource MultiShareNumericUpDown}"
                       Minimum="1"
                       Maximum="16"
                       Increment="1"
                       FormatString="G2"
                       ClipValueToMinMax="True"
                       ParsingNumberStyle="None"
                       MinWidth="420"
                       Name="ThresholdNumericUpDown" />
      </DockPanel>
    </StackPanel>
  </ContentArea>
</UserControl>
