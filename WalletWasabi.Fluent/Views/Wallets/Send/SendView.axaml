<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:WalletWasabi.Fluent.ViewModels.Wallets.Send"
             xmlns:converters="clr-namespace:WalletWasabi.Fluent.Converters"
             xmlns:models="clr-namespace:WalletWasabi.Fluent.Models"
             xmlns:helpers="clr-namespace:WalletWasabi.Fluent.Helpers"
             mc:Ignorable="d"
             x:DataType="vm:SendViewModel"
             x:CompileBindings="True"
             x:Class="WalletWasabi.Fluent.Views.Wallets.Send.SendView">

  <UserControl.DataTemplates>

    <DataTemplate DataType="models:Suggestion">
      <Button Background="Transparent" HorizontalAlignment="Center" Padding="8" DockPanel.Dock="Right" Command="{Binding AcceptCommand}" Focusable="False" Cursor="Hand">
        <DockPanel HorizontalAlignment="Center">
          <PathIcon Data="{StaticResource paste_regular}" Width="20" DockPanel.Dock="Left" />
          <TextBlock Margin="4 0 0 0" Text="{Binding Text}" VerticalAlignment="Center" />
        </DockPanel>
      </Button>
    </DataTemplate>
  </UserControl.DataTemplates>

  <UserControl.Styles>

    <Style Selector="FlyoutPresenter">
      <Setter Property="Padding" Value="0" />
      <Setter Property="MinWidth" Value="0" />
    </Style>

    <Style Selector="FlyoutPresenter TextBlock">
      <Setter Property="Foreground" Value="{DynamicResource AcrylicTrimForeground}" />
    </Style>

    <Style Selector="FlyoutPresenter PathIcon">
      <Setter Property="Foreground" Value="{DynamicResource AcrylicTrimForeground}" />
    </Style>
  </UserControl.Styles>

  <ContentArea
                 EnableBack="{Binding EnableBack}"
                 EnableNext="True"
                 NextContent="Continue"
                 EnableCancel="{Binding EnableCancel}"
                 IsBusy="{Binding IsBusy}"
                 Title="Send"
                 ScrollViewer.VerticalScrollBarVisibility="Auto">
    <ContentArea.TopContent>
      <!-- Balance -->
      <PrivacyContentControl PrivacyReplacementMode="Text" DockPanel.Dock="Top" HorizontalAlignment="Center" Classes="h8" Opacity="0.6">
        <Button Focusable="False" Classes="plainHyperlink h8" Command="{Binding InsertMaxCommand}">
          <AmountControl Amount="{Binding Balance^}" />
        </Button>
      </PrivacyContentControl>
    </ContentArea.TopContent>
    <DockPanel LastChildFill="False">
      <DockPanel.Styles>
        <Style Selector="DockPanel > Label">
          <Setter Property="MinWidth" Value="80" />
        </Style>
        <Style Selector="AnimatedButton.flash">
          <Setter Property="InitialOpacity" Value="0.8" />
        </Style>
        <Style Selector="AnimatedButton.flash /template/ PathIcon#PART_IconNormal">
          <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}" />
          <Style.Animations>
            <Animation Duration="0.25" IterationCount="6"
                       PlaybackDirection="AlternateReverse"
                       Easing="{StaticResource FluentEasing}">
              <KeyFrame KeyTime="0:0:0.0">
                <Setter Property="Opacity" Value="0.1" />
              </KeyFrame>
              <KeyFrame KeyTime="0:0:0.25">
                <Setter Property="Opacity" Value="1" />
              </KeyFrame>
            </Animation>
          </Style.Animations>
        </Style>
      </DockPanel.Styles>

      <!-- To -->
      <DockPanel DockPanel.Dock="Top" Margin="0,0,0,10" MaxHeight="63">
        <Label DockPanel.Dock="Left" Content="_To:" Target="toTb" />
        <TextBox x:Name="toTb" MaxLength="250" Text="{Binding To}" Classes="monoSpaced"
                 Watermark="(e.g. Bitcoin address or payjoin URL)"
                 ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                 AcceptsReturn="False">
          <Interaction.Behaviors>
            <FocusOnAttachedBehavior />
            <ExecuteCommandOnActivatedBehavior Command="{Binding AutoPasteCommand}" />
            <FocusNextWhenValidBehavior />
          </Interaction.Behaviors>
          <TextBox.InnerRightContent>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="10" Margin="10 0">
              <AnimatedButton KeyboardNavigation.IsTabStop="False"
                                Focusable="False"
                                Command="{Binding PasteCommand}"
                                ToolTip.Tip="Paste"
                                NormalIcon="{StaticResource paste_regular}"
                                ClickIcon="{StaticResource copy_confirmed}">
                <Interaction.Behaviors>
                  <PasteButtonFlashBehavior FlashAnimation="flash" CurrentAddress="{Binding To}" />
                </Interaction.Behaviors>
              </AnimatedButton>
              <AnimatedButton IsVisible="{Binding IsQrButtonVisible}"
                                KeyboardNavigation.IsTabStop="False"
                                Focusable="False"
                                Command="{Binding QrCommand}"
                                ToolTip.Tip="Scan QR Code"
                                NormalIcon="{StaticResource qr_code_regular}" />
            </StackPanel>
          </TextBox.InnerRightContent>
        </TextBox>
      </DockPanel>
      <!-- Amount -->
      <DockPanel DockPanel.Dock="Top" Margin="0,0,0,15">
        <Label DockPanel.Dock="Left" Content="_Amount:" Target="amountTb" />
        <DockPanel>
          <Image Width="120" Source="avares://WalletWasabi.Fluent/Assets/TechnologyLogos/payjoin.png"
                 DockPanel.Dock="Right" IsVisible="{Binding IsPayJoin}" Margin="0 8 8 0" VerticalAlignment="Top" />
          <DualCurrencyEntryBox x:Name="amountTb"
                                  KeyboardNavigation.IsTabStop="{Binding !IsFixedAmount}"
                                  IsReadOnly="{Binding IsFixedAmount}"
                                  AmountBtc="{Binding AmountBtc}"
                                  ConversionRate="{Binding ExchangeRate}"
                                  CurrencyCode="BTC"
                                  ConversionCurrencyCode="USD"
                                  IsConversionReversed="{Binding ConversionReversed, Mode=TwoWay}"
                                  BalanceBtc="{Binding Balance^.Btc}"
                                  BalanceUsd="{Binding Balance^.Usd^}"
                                  ValidatePasteBalance="False">
            <DualCurrencyEntryBox.Resources>

              <converters:BooleanConverter x:Key="SuggestionPlacementConverter"
                                           TrueValue="{x:Static PlacementMode.BottomEdgeAlignedRight}"
                                           FalseValue="{x:Static PlacementMode.BottomEdgeAlignedLeft}" />
            </DualCurrencyEntryBox.Resources>
            <Interaction.Behaviors>
              <FlyoutSuggestionBehavior Target="{Binding #amountTb.LeftEntryBox}" Content="{Binding BitcoinContent^}"
                                                  EqualityComparer="{x:Static helpers:AmountStringComparer.Instance}"
                                                  PlacementMode="{Binding ConversionReversed, Converter={StaticResource SuggestionPlacementConverter}}" />
              <FlyoutSuggestionBehavior Target="{Binding #amountTb.RightEntryBox}" Content="{Binding UsdContent^}"
                                                  EqualityComparer="{x:Static helpers:AmountStringComparer.Instance}"
                                                  PlacementMode="{Binding !ConversionReversed, Converter={StaticResource SuggestionPlacementConverter}}" />
            </Interaction.Behaviors>
          </DualCurrencyEntryBox>
        </DockPanel>
      </DockPanel>
      <!-- Recipient -->
      <DockPanel DockPanel.Dock="Top" Margin="0,0,0,10">
        <Label DockPanel.Dock="Left" Content="_Recipient:" Target="LabelTagBox"
               Margin="0,10,0,10"/>
        <TagsBox x:Name="LabelTagBox"
                 VerticalAlignment="Top"
                 Watermark="{StaticResource LabelsWatermarkText}"
                 TagSeparator=","
                 SuggestionsAreCaseSensitive="True"
                 RestrictInputToSuggestions="False"
                 Items="{Binding SuggestionLabels.Labels}"
                 TopItems="{Binding SuggestionLabels.TopSuggestions}"
                 Suggestions="{Binding SuggestionLabels.Suggestions}"
                 MaxTextLength="{StaticResource MaxLabelLength}"
                 IsCurrentTextValid="{Binding SuggestionLabels.IsCurrentTextValid, Mode=OneWayToSource}"
                 ForceAdd="{Binding SuggestionLabels.ForceAdd, Mode=TwoWay}">
        </TagsBox>
      </DockPanel>
    </DockPanel>
  </ContentArea>
</UserControl>
