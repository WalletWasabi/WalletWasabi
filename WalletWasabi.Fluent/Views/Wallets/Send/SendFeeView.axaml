<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:behaviors="using:WalletWasabi.Fluent.Behaviors"
             xmlns:c="using:WalletWasabi.Fluent.Controls"
             xmlns:vm="using:WalletWasabi.Fluent.ViewModels.Wallets.Send"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:CompileBindings="True"
             x:DataType="vm:SendFeeViewModel"
             x:Class="WalletWasabi.Fluent.Views.Wallets.Send.SendFeeView">
  <UserControl.Styles>
    <!-- Slider Fee -->
    <Style Selector="Slider.cursor">
      <Setter Property="RenderTransform">
        <RotateTransform Angle="-180" />
      </Setter>
    </Style>
    <Style Selector="Slider.cursor /template/ RepeatButton#PART_IncreaseButton">
      <Setter Property="Background" Value="{DynamicResource SliderTrackValueFill}" />
    </Style>
    <Style Selector="Slider:pressed.cursor /template/ RepeatButton#PART_IncreaseButton">
      <Setter Property="Background" Value="{DynamicResource SliderTrackValueFillPressed}" />
    </Style>
    <Style Selector="Slider:pointerover.cursor /template/ RepeatButton#PART_IncreaseButton">
      <Setter Property="Background" Value="{DynamicResource SliderTrackValueFillPointerOver}" />
    </Style>
    <Style Selector="Slider.cursor /template/ RepeatButton#PART_DecreaseButton">
      <Setter Property="Background" Value="{DynamicResource SliderTrackFill}" />
    </Style>
    <Style Selector="Slider:pressed.cursor /template/ RepeatButton#PART_DecreaseButton">
      <Setter Property="Background" Value="{DynamicResource SliderTrackFillPressed}" />
    </Style>
    <Style Selector="Slider:pointerover.cursor /template/ RepeatButton#PART_DecreaseButton">
      <Setter Property="Background" Value="{DynamicResource SliderTrackFillPointerOver}" />
    </Style>
    <Style Selector="Slider:horizontal.cursor">
      <Setter Property="Background" Value="{DynamicResource SliderTrackFill}" />
    </Style>
    <!-- LineChart Labels -->
    <Style Selector="c|LineChart.xAxisLabels">
      <Setter Property="XAxisLabelForeground" Value="{DynamicResource TextForegroundColor}" />
      <Setter Property="XAxisLabelOpacity" Value="0.5" />
      <Setter Property="XAxisLabelAngle" Value="0" />
      <Setter Property="XAxisLabelOffset" Value="0,20" />
      <Setter Property="XAxisLabelAlignment" Value="Center" />
      <Setter Property="XAxisLabelFontFamily" Value="Arial" />
      <Setter Property="XAxisLabelFontStyle" Value="Normal" />
      <Setter Property="XAxisLabelFontWeight" Value="Normal" />
      <Setter Property="XAxisLabelFontSize" Value="12" />
    </Style>
    <!-- LineChart Cursor -->
    <Style Selector="c|LineChart.cursor">
      <Setter Property="CursorStroke" Value="#72BD81" />
      <Setter Property="CursorStrokeThickness" Value="2" />
      <!-- <Setter Property="CursorStrokeDashStyle" Value="{x:Static DashStyle.Dash}" /> -->
      <Setter Property="CursorStrokeLineCap" Value="Round" />
    </Style>
    <!-- LineChart XAxis -->
    <Style Selector="c|LineChart.xAxis">
      <Setter Property="XAxisOffset" Value="0,0" />
      <Setter Property="XAxisOpacity" Value="0.5" />
      <Setter Property="XAxisStroke" Value="{DynamicResource TextForegroundColor}" />
      <Setter Property="XAxisStrokeThickness" Value="0.7" />
      <Setter Property="XAxisArrowSize" Value="3.5" />
      <Setter Property="XAxisMinViableWidth" Value="0" />
      <Setter Property="XAxisMinViableHeight" Value="0" />
    </Style>
    <!-- LineChart YAxis -->
    <Style Selector="c|LineChart.yAxis">
      <Setter Property="YAxisOffset" Value="-10,-115" />
      <Setter Property="YAxisOpacity" Value="0.5" />
      <Setter Property="YAxisStroke" Value="{DynamicResource TextForegroundColor}" />
      <Setter Property="YAxisStrokeThickness" Value="0.7" />
      <Setter Property="YAxisArrowSize" Value="3.5" />
      <Setter Property="YAxisMinViableWidth" Value="0" />
      <Setter Property="YAxisMinViableHeight" Value="120" />
    </Style>
    <!-- LineChart YAxis Title -->
    <Style Selector="c|LineChart.yAxisTitle">
      <Setter Property="YAxisTitleForeground" Value="{DynamicResource TextForegroundColor}" />
      <Setter Property="YAxisTitleOpacity" Value="0.5" />
      <Setter Property="YAxisTitleAngle" Value="-90" />
      <Setter Property="YAxisTitleOffset" Value="-55,-75" />
      <Setter Property="YAxisTitleSize" Value="90,20" />
      <Setter Property="YAxisTitleAlignment" Value="Center" />
      <Setter Property="YAxisTitleFontFamily" Value="Arial" />
      <Setter Property="YAxisTitleFontStyle" Value="Normal" />
      <Setter Property="YAxisTitleFontWeight" Value="Normal" />
      <Setter Property="YAxisTitleFontSize" Value="12" />
    </Style>
    <!-- LineChart Border -->
    <Style Selector="c|LineChart.border">
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="BorderRadiusX" Value="4" />
      <Setter Property="BorderRadiusY" Value="4" />
    </Style>
    <!-- LineChart Area -->
    <Style Selector="c|LineChart.area">
      <Setter Property="AreaFill">
        <LinearGradientBrush StartPoint="50%,0%" EndPoint="50%,100%" Opacity="0.2">
          <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.0" Color="{DynamicResource LineChartAreaGradientStartStopColor}" />
            <GradientStop Offset="1.0" Color="{DynamicResource LineChartAreaGradientEndStopColor}" />
          </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
      </Setter>
      <Setter Property="AreaStroke" Value="{DynamicResource LineChartLineColor}" />
    </Style>
  </UserControl.Styles>
  <UserControl.KeyBindings>
    <KeyBinding Gesture="Enter" Command="{Binding NextCommand}" />
  </UserControl.KeyBindings>
  <c:ContentArea Title="{Binding Title}"
                 Caption="Use the slider to choose your preference for how fast the transaction will be processed"
                 CancelContent="Cancel"
                 EnableCancel="{Binding EnableCancel}"
                 EnableBack="true"
                 EnableNext="True" NextContent="Continue"
                 IsBusy="{Binding IsBusy}">
    <DockPanel MinHeight="80">
      <DockPanel.Resources>
        <Thickness x:Key="SliderTopHeaderMargin">0,0,0,4</Thickness>
        <GridLength x:Key="SliderPreContentMargin">0</GridLength>
        <GridLength x:Key="SliderPostContentMargin">0</GridLength>
      </DockPanel.Resources>
      <Slider x:Name="CursorValue2"
              Margin="18,0,18,0"
              KeyboardNavigation.IsTabStop="False"
              DockPanel.Dock="Bottom"
              Classes="cursor"
              Focusable="True"
              Minimum="{Binding XAxisMinValue}"
              Maximum="{Binding XAxisMaxValue}"
              Value="{Binding XAxisCurrentValueIndex}" />
      <c:LineChart x:Name="GradientLineChart"
                   Classes="cursor border xAxisLabels yAxis yAxisTitle area"
                   XAxisLabels="{Binding XAxisLabels}"
                   XAxisValues="{Binding XAxisValues}"
                   XAxisCurrentValue="{Binding XAxisCurrentValue, Mode=TwoWay}"
                   YAxisValues="{Binding YAxisValues}">
        <c:LineChart.Styles>
          <Style Selector="c|LineChart">
            <Setter Property="XAxisPlotMode" Value="EvenlySpaced"/>
            <Setter Property="Margin" Value="18,10,18,0"/>
            <Setter Property="MinHeight" Value="150"/>
            <Setter Property="YAxisLogarithmicScale" Value="False"/>
            <Setter Property="AreaMargin" Value="10,0,10,30"/>
            <Setter Property="AreaStrokeThickness" Value="2"/>
            <Setter Property="AreaStrokeLineCap" Value="Round"/>
            <Setter Property="AreaMinViableWidth" Value="40"/>
            <Setter Property="AreaMinViableHeight" Value="20"/>
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="YAxisTitle" Value="More Expensive"/>
          </Style>
          <Style Selector="c|LineChart.narrow">
            <Setter Property="AreaMargin" Value="10,0,10,45"/>
            <Setter Property="MinHeight" Value="170"/>
            <Setter Property="XAxisLabelAngle" Value="45" />
          </Style>
        </c:LineChart.Styles>
        <i:Interaction.Behaviors>
          <ia:DataTriggerBehavior Binding="{Binding #GradientLineChart.Bounds.Width}" ComparisonCondition="LessThan" Value="550">
            <behaviors:AddClassAction StyledElement="{Binding #GradientLineChart}" ClassName="narrow" RemoveIfExists="True"/>
          </ia:DataTriggerBehavior>
          <ia:DataTriggerBehavior Binding="{Binding #GradientLineChart.Bounds.Width}" ComparisonCondition="GreaterThanOrEqual" Value="550">
            <behaviors:RemoveClassAction StyledElement="{Binding #GradientLineChart}" ClassName="narrow"/>
          </ia:DataTriggerBehavior>
        </i:Interaction.Behaviors>
      </c:LineChart>
    </DockPanel>
  </c:ContentArea>
</UserControl>