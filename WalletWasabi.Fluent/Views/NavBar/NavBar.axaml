<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="using:WalletWasabi.Fluent.Controls"
             xmlns:conv="using:WalletWasabi.Fluent.Converters"
             xmlns:vm="using:WalletWasabi.Fluent.ViewModels.NavBar"
             xmlns:vmw="using:WalletWasabi.Fluent.ViewModels.Wallets"
             x:DataType="vm:NavBarViewModel"
             x:CompileBindings="True"
             mc:Ignorable="d" d:DesignWidth="280" d:DesignHeight="459"
             x:Class="WalletWasabi.Fluent.Views.NavBar.NavBar" UseLayoutRounding="False">
  <UserControl.Styles>
    <Style Selector="PathIcon">
      <Setter Property="Margin" Value="13 0 0 0" />
      <Setter Property="Height" Value="18" />
      <Setter Property="Width" Value="18" />
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemForegroundBrush}" />
    </Style>
    <Style Selector="TextBlock.headerText">
      <Setter Property="FontSize" Value="14" />
      <Setter Property="Margin" Value="25 15 0 12" />
      <Setter Property="Opacity" Value="0.8" />
      <Setter Property="FontWeight" Value="Light" />
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemForegroundBrush}" />
    </Style>
    <Style Selector="Separator">
      <Setter Property="Background" Value="{DynamicResource NavBarSeparatorBrush}" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="Margin" Value="{DynamicResource MenuFlyoutSeparatorThemePadding}" />
      <Setter Property="Height" Value="{DynamicResource MenuFlyoutSeparatorThemeHeight}" />
    </Style>
    <Style Selector="ListBox">
      <Setter Property="Margin" Value="0" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Padding" Value="0" />
    </Style>
    <Style Selector="ListBox.vertical > c|NavBarItem">
      <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" x:CompileBindings="False" />
      <Setter Property="IsHitTestVisible" Value="{Binding IsEnabled}" x:CompileBindings="False" />
      <Setter Property="Focusable" Value="{Binding IsEnabled}" x:CompileBindings="False" />
      <Setter Property="IsEnabled" Value="{Binding IsEnabled}" x:CompileBindings="False" />
    </Style>
    <Style Selector="ListBox.vertical > c|NavBarItem:disabled PathIcon">
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemDisabledBrush}" />
    </Style>
    <Style Selector="ListBox.horizontal > c|NavBarItem">
      <Setter Property="IndicatorOrientation" Value="Horizontal" />
      <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" x:CompileBindings="False" />
      <Setter Property="IsHitTestVisible" Value="{Binding IsEnabled}" x:CompileBindings="False" />
      <Setter Property="Focusable" Value="{Binding IsEnabled}" x:CompileBindings="False" />
      <Setter Property="IsEnabled" Value="{Binding IsEnabled}" x:CompileBindings="False" />
    </Style>
    <Style Selector="ListBox.horizontal > c|NavBarItem:disabled PathIcon">
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemDisabledBrush}" />
    </Style>
    <Style Selector="c|NavBarTreeItem">
      <Setter Property="IsExpanded" Value="{Binding IsExpanded}" x:CompileBindings="False" />
      <Setter Property="TextBlock.Foreground" Value="{DynamicResource NavBarItemForegroundBrush}" />
    </Style>
    <Style Selector=":is(Button).NavButton">
      <Setter Property="Width" Value="{DynamicResource SplitViewCompactPaneLength}" />
      <Setter Property="Padding" Value="12,9,12,12" />
    </Style>
    <Style Selector=":is(Button).NavButton:disabled > PathIcon">
      <Setter Property="Foreground" Value="{DynamicResource NavBarItemDisabledBrush}" />
    </Style>
    <Style Selector=":is(Button).NavButton /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button):checked.NavButton /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button):unchecked.NavButton /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button):disabled /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button):pointerover /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource NavBarItemPointerOverBackgroundBrush}" />
    </Style>
  </UserControl.Styles>
  <DockPanel Margin="0 0 0 4">
    <StackPanel DockPanel.Dock="Top" Spacing="5">
      <Panel Height="30" />
      <Border Padding="12 12 12 5" Margin="0,-3 ,0,4">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
          <ContentControl Template="{DynamicResource wasabi_logo_fixed}" Margin="13,0,0,0" VerticalAlignment="Center" />
          <ContentControl Template="{DynamicResource wasabi_logo_text_fixed}" Margin="22,0,0,0"
                          VerticalAlignment="Center" ClipToBounds="False" />
        </StackPanel>
      </Border>
      <!-- TopItems List -->
      <c:NavBarListBox Items="{Binding TopItems}"
                       SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                       Name="TopListBox"
                       Classes="vertical">
        <c:NavBarListBox.ItemTemplate>
          <DataTemplate x:DataType="vm:NavBarItemViewModel" x:CompileBindings="False">
            <Panel>
              <Panel Width="45" Background="Transparent" HorizontalAlignment="Left" ToolTip.Tip="{Binding Title}">
                <PathIcon HorizontalAlignment="Left">
                  <PathIcon.Data>
                    <Binding Path="IconName" Converter="{x:Static conv:NavBarIconConverter.Instance}" />
                  </PathIcon.Data>
                </PathIcon>
              </Panel>
              <TextBlock Text="{Binding Title}" Margin="55 0 0 0" />
            </Panel>
          </DataTemplate>
        </c:NavBarListBox.ItemTemplate>
      </c:NavBarListBox>
      <Separator />
    </StackPanel>
    <StackPanel DockPanel.Dock="Bottom">
      <Separator />
      <!-- BottomItems List -->
      <c:NavBarListBox Items="{Binding BottomItems}"
                       SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                       Name="BottomListBox"
                       Classes.horizontal="{Binding IsOpen}"
                       Classes.vertical="{Binding !IsOpen}">
        <c:NavBarListBox.Styles>
          <Style Selector=":is(ListBox).vertical /template/ #PART_ItemsPresenter > ReversibleStackPanel">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="ReverseOrder" Value="True" />
          </Style>
          <Style Selector=":is(ListBox).horizontal /template/ #PART_ItemsPresenter > ReversibleStackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="ReverseOrder" Value="False" />
          </Style>
          <Style Selector=":is(ListBox)">
            <Setter Property="ItemsPanel">
              <Setter.Value>
                <ItemsPanelTemplate>
                  <ReversibleStackPanel />
                </ItemsPanelTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </c:NavBarListBox.Styles>
        <c:NavBarListBox.ItemTemplate>
          <DataTemplate x:DataType="vm:NavBarItemViewModel">
            <Panel Width="45" Background="Transparent" HorizontalAlignment="Center" ToolTip.Tip="{Binding Title}">
              <PathIcon HorizontalAlignment="Left">
                <PathIcon.Data>
                  <Binding Path="IconName" Converter="{x:Static conv:NavBarIconConverter.Instance}" />
                </PathIcon.Data>
              </PathIcon>
            </Panel>
          </DataTemplate>
        </c:NavBarListBox.ItemTemplate>
      </c:NavBarListBox>
    </StackPanel>
    <!-- Items List -->
    <DockPanel>
      <TextBlock Classes="headerText" DockPanel.Dock="Top" Text="Wallets" IsVisible="{Binding IsOpen}" />
      <c:NavBarListBox Items="{Binding Wallets}"
                       SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                       Name="ItemsListBox"
                       Classes="vertical draggable"
                       RenderTransformOrigin="0%,50%"
                       VerticalAlignment="Stretch">
        <c:NavBarListBox.DataTemplates>
          <DataTemplate DataType="vmw:WalletViewModelBase">
            <Panel>
              <Panel Width="45" Background="Transparent" HorizontalAlignment="Left" ToolTip.Tip="{Binding Title}">
                <PathIcon HorizontalAlignment="Left">
                  <PathIcon.Data>
                    <Binding Path="IconName" Converter="{x:Static conv:NavBarIconConverter.Instance}" />
                  </PathIcon.Data>
                </PathIcon>
                <Ellipse IsVisible="{Binding IsLoggedIn, Mode=OneWay}" Width="9" Height="9" Margin="15,0,0,-13"
                         Fill="#F2994A" />
              </Panel>
              <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" Margin="55 0 15 0" />
            </Panel>
          </DataTemplate>
        </c:NavBarListBox.DataTemplates>
      </c:NavBarListBox>
    </DockPanel>
  </DockPanel>
</UserControl>